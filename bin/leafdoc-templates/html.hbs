<!DOCTYPE html>
<html>
<head>
	<title>{{ title }}</title>
	<meta charset="utf-8">

	<link rel="stylesheet" href="http://leafletjs.com/docs/css/normalize.css" />
	<link rel="stylesheet" href="http://leafletjs.com/docs/css/main.css" />
	<script src="http://leafletjs.com/docs/highlight/highlight.pack.js"></script>
	<link rel="stylesheet" href="http://leafletjs.com/docs/highlight/styles/github-gist.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/evil-icons/1.7.8/evil-icons.min.css">
    <script src="https://cdn.jsdelivr.net/evil-icons/1.7.8/evil-icons.min.js"></script>
</head>
<body class='api-page'>
	<div class='container'>

	<h2>FoxCommerce API reference</h2>
    <div id="toc" class="clearfix">
        <div class="toc-col map-col">
            <h4>FoxApi</h4>
            <ul>
                <li><a href="#foxapi-example">Usage example</a></li>
                <li><a href="#foxapi-option">Options</a></li>
                <li><a href="#foxapi-property">Properties</a></li>
            </ul>
            <h4>Classes</h4>
            <ul>
                <li><a href="#addresses-method">Addresses Methods</a></li>
            </ul>
        </div>
        <div class="toc-col">
            <h4>Cart Classes</h4>
            <ul>
                <li><a href="#todo">Shipping Methods</a></li>
                <li><a href="#todo">Payment Methods</a></li>
                <li><a href="#todo">Billing Methods</a></li>
            </ul>
        </div>
    </div>

	{{{ body }}}

	</div>
    <script src="http://leafletjs.com/docs/js/docs.js"></script>
	<script>
	hljs.configure({tabReplace: '    '});
	hljs.initHighlightingOnLoad();

	var elems = document.querySelectorAll('h2, h3, h4, tr');

	for (var i = 0, len = elems.length; i < len; i++) {
		var el = elems[i];

		if (el.id) {
			var anchor = document.createElement('a');
			anchor.setAttribute('anchor', el.id);
			if (!el.children.length) {
				// For headers, insert the anchor before.
				el.parentNode.insertBefore(anchor, el);
			} else {
				// For table rows, insert the anchor inside the first <td>
				el.querySelector('td').appendChild(anchor);
			}
		}
	}

	elems = document.querySelectorAll('div.accordion');
	for (var i = 0, len = elems.length; i < len; i++) {
		var el = elems[i];

		el.querySelector('label').addEventListener('click', function(c){
			return function() {
				if (c.className === 'accordion expanded') {
					c.className = 'accordion collapsed';
				} else {
					c.className = 'accordion expanded';
				}
				console.log(c);
			};
		}(el));

// 		el.className = 'accordion collapsed';
// 		el.querySelector('.accordion-content').style.display = 'none';
	}

    var tables = document.getElementsByTagName('table');

    for (var i = 0, len = tables.length; i < len; i++) {
        var id = tables[i].getAttribute('data-id'),
                tds = tables[i].getElementsByTagName('td');

        for (var j = 0, tdLen = tds.length; j < tdLen; j++) {
            if (tds[j].cellIndex === 0) {
                tds[j].parentNode.id = id + '-' + (tds[j].textContent || tds[j].innerText).split('(')[0].toLowerCase();

                tds[j].parentNode.onclick = function(e) {
                    if (e.offsetX < 0) {
                        window.location.hash = '#' + this.id;
                    }
                };
            }
        }
    }

    (function () {
        var headers = document.getElementsByTagName('h2');

        for (var i = 0, len = headers.length; i < len; i++) {
            if (headers[i].id) {
                headers[i].onclick = function(e) {
                    if (e.offsetX < 0) {
                        window.location.hash = '#' + this.id;
                    }
                };
            }
        }
    })();

    </script>
<style>
	div.accordion {
		width: 100%;
		overflow: hidden;
	}

	div.accordion > label,
	section.collapsable h4 {
		display: block;
		background: #EEE;
		padding: 0.5em 1em;
		font-weight: bold;
		font-size: 12px;
		margin: 0;
	}

	div.accordion > label {
		cursor: pointer;
	}

	div.accordion > div.accordion-content {
		max-height: 0;
		display: none;
	}

	div.accordion.collapsed > div.accordion-content {
		animation-duration: 0.4s;
		animation-name: collapse;
/* 		height: 0; */
		max-height: 0;
		display: block;
	}

	div.accordion.expanded > div.accordion-content {
		animation-duration: 0.4s;
		animation-name: expand;
/* 		height: auto; */
		max-height: none;
		display: block;
	}

	@keyframes collapse {
		0% { max-height: 100vh; }
		100% { max-height: 0; }
	}

	@keyframes expand {
		0% { max-height: 0; }
		100% { max-height: 100vh; }
	}

/*	div.accordion > div.accordion-content {
		transition: max-height 0.4s ease-out 0s;
	}*/

	div.accordion.expanded > label > span.expander {
		transform: rotate(90deg);
	}

	div.accordion > label > span.expander {
		transition: transform 0.4s ease-out 0s;
		display: inline-block;
	}

	table {
		margin-bottom: 0;
	}

    section.collapsable {
        margin-bottom: 20px;
    }

	section.collapsable {
/* 		background: pink; */
	}

	section.collapsable div.section-comments {
		background: #eee;
		padding: 0 1em;
		font-size: 12px;
	}

	section.collapsable pre {
		margin:0;
	}

	section.collapsable p:last-child {
		margin-bottom: 0;
	}



</style>
</body></html>
